Stack Implementation using Single Queue;

class MyStack {
public:
    queue<int>q1;

    
    void push(int x) {
      int sz=q1.size();
      q1.push(x);
     while(sz--){
     q1.push(q1.front());
     q1.pop();
     }

    }
    
    int pop() {
   int ele=q1.front();
   q1.pop();
   return ele;

    }
    
    int top() {
         int ele=q1.front();
          return ele;
    }
    
    bool empty() {
        if(q1.size()==0) return true;
        else return false;
    }
};

Stack Implementation using Two Queue

class MyStack {
public:
    queue<int>q1,q2;

    
    void push(int x) {
      q2.push(x);
      while(q1.size()!=0){
          q2.push(q1.front());
          q1.pop();
      }
      swap(q1,q2);
    }
    
    int pop() {
   int ele=q1.front();
   q1.pop();
   return ele;

    }
    
    int top() {
         int ele=q1.front();
          return ele;
    }
    
    bool empty() {
        if(q1.size()==0) return true;
        else return false;
    }
};


